package views

import "fmt"

templ ImageWithReload(refresh int, queries, kioskVersion string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="version" content={ kioskVersion }/>
			<meta name="description" content="Immich Kiosk is a lightweight slideshow for running on kiosk devices and browsers that uses Immich as a data source."/>
			<meta name="mobile-web-app-capable" content="yes"/>
			<meta name="apple-mobile-web-app-capable" content="yes"/>
			<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"/>
			<meta name="apple-mobile-web-app-status-bar" content="black-translucent"/>
			<meta name="theme-color" content="black"/>
			<title>Immich Kiosk</title>
			<link rel="manifest" href="/assets/manifest.json"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/assets/images/apple-touch-icon.png"/>
			<link rel="icon" type="image/png" sizes="32x32" href="/assets/images/favicon-32x32.png"/>
			<link rel="icon" type="image/png" sizes="16x16" href="/assets/images/favicon-16x16.png"/>
			<style>
				html, body {
                    width: 100%;
                    height: 100%;
                    min-width: 100%;
                    min-height: 100%;
                    padding: 0;
                    margin: 0;
                    overflow: hidden;
                    background-color: #000;
				}

			    body {
					background-size: cover;
					background-position: center;
					background-repeat: no-repeat;
				}
			</style>
		</head>
		<body style={ templ.SafeCSS(fmt.Sprintf("background-image: url(/image?%s);", queries)) }>
			@templ.JSONScript("kiosk-data", refresh)
			<script>
			    var rawData = document.getElementById('kiosk-data').textContent;
				var kioskData;
				var refresh = 60;
				var queries = '';
				try {
				    kioskData = JSON.parse(rawData);
					if (kioskData.refresh && kioskData.refresh > 0) refresh = kioskData.refresh;
					if (kioskData.queries) queries = kioskData.queries;
				} catch (e) {
				    console.error("Error parsing refresh interval:", e);
					refresh = 60;
				}

				var bodyElement = document.querySelector('body');

			    function refreshImage() {
                  var date = new Date();
                  bodyElement.style.backgroundImage = 'url(/image?timestamp=' + date.getTime() + '&' + queries)';
			    }

				setTimeout(function() {
	              refreshImage();
			    }, refresh * 1000);
			</script>
		</body>
	</html>
}
